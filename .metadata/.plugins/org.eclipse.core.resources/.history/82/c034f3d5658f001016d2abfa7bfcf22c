package SWEA.러시아국기같은깃발_4613;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class Solution {
	static int N, M;
	static List<int[]> result;
	static boolean[] visited;
	static String[] flag;
	static int[] rows;
	
	public static void main(String[] args) throws FileNotFoundException {
		File file = new File("./src/SWEA/러시아국기같은깃발_4613/input.txt");
		Scanner sc = new Scanner(file);
		
		// 테스트케이스
		int T = sc.nextInt();
		
		// 테스트케이스만큼 반복 시작
		for(int tc = 1; tc <= T; tc++) {
			N = sc.nextInt();
			M = sc.nextInt();
			
			flag = new String[N];
			for(int i = 0; i < N; i++) {
				flag[i] = sc.next();
			}
			
			
			
			// 방문 여부 저장 배열
			visited = new boolean[N];
			
			// 결과 배열
			result = new ArrayList<>();
			
			// 가운데 경계 구해
			// 1 ~ N-1 중에서 2개 골라
			// 앞에 수는 뒤에 수보다 같거나 작아야한다
			
			rows = new int[N];
			for(int i = 0; i < N; i++) {
				rows[i] = i+1;
			}
			
			// rows에서 2개 뽑으면 되잔아
			for(int i = 1; i < N-1; i++) {
				for(int j = i; j < N-1; j++) {
					result.add(new int[] {i, j});
				}
			}
			
			System.out.println("행: " + rows.length);
			System.out.println();
			for(int i = 0; i < result.size(); i++) {
				System.out.println(Arrays.toString(result.get(i)));
			}
			
			// flag[i].toCharArray
			char[][] charFlag = new char[N][M];
			
			for(int i = 0; i < N; i++) {
				charFlag[i] = flag[i].toCharArray();
			}
//			System.out.println(Arrays.deepToString(charFlag));
			
			// 새로 칠해야 하는 칸
			int blue = 0;
			int minCnt = N * M;
			
			// result.get(0) = {1, 1}
			
			// 맨 윗줄, 맨 아랫줄 칠해야 하는 칸
			int white = 0;
			int red = 0;
			int cnt = blue+white+red;
			
			for(int i = 0; i < M; i++) {
				if(charFlag[0][i] != 'W')
					white++;
				if(charFlag[N-1][i] != 'R')
					red++;
			}
			
			System.out.println(white+red);
			
			
			for(int i = 0; i < result.size(); i++) {
				int start = result.get(i)[0];
				int end = result.get(i)[1];
				
				while(start <= end) {
					for(int c = 0; c < M; c++) {
						if(charFlag[0][c] != 'W') {
							white++;
						}
						if(charFlag[N-1][c] != 'R') {
							red++;
						}
						if(charFlag[start][c] != 'B') {
							blue++;
						}
					}	
					start++;
				}
				
				int total=white+red+blue;
				if(total < minCnt)
					minCnt = total;
			}
			System.out.println(minCnt+white+red);
			
		}  // 테스트케이스만큼 반복 끝
		
		
		

	}


}
