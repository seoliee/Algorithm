package SWEA.러시아국기같은깃발_4613;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.Scanner;

public class Solution {
	static int[] rows;
	
	public static void main(String[] args) throws FileNotFoundException {
		File file = new File("./src/SWEA/러시아국기같은깃발_4613/input.txt");
		Scanner sc = new Scanner(file);
		
		// 테스트케이스
		int T = sc.nextInt();
		
		// 테스트케이스만큼 반복 시작
		for(int tc = 1; tc <= T; tc++) {
			int N = sc.nextInt();
			int M = sc.nextInt();
			
			// 깃발 입력받기
			char[][] flag = new char[N][M];
			for(int i = 0; i < N; i++) {
				flag[i] = sc.next().toCharArray();
			}
			
//			System.out.println(Arrays.deepToString(flag));
			// row 하나에서 새로 칠해야 하는 칸의 수 저장하는 배열
			int[] paintW = new int[N];
			int[] paintB = new int[N];
			int[] paintR = new int[N];
			
//			System.out.println(Arrays.toString(paintW));
//			System.out.println(Arrays.toString(paintB));
//			System.out.println(Arrays.toString(paintR));
			
			for(int row = 0; row < N; row++) {
				int w = 0;  // 새로 칠해야 하는 하얀색 개수
				int b = 0;  // 새로 칠해야 하는 파란색 개수
				int r = 0;  // 새로 칠해야 하는 빨간색 개수
				
				for(int col = 0; col < M; col++) {  // 열 하나씩 확인 (char 하나씩 확인)
					char color = flag[row][col];  // 깃발 칸의 색깔
					if(color != 'W') w++;  // 새로 칠해야 하는 하얀색++
					if(color != 'B') b++;  // 새로 칠해야 하는 파란색++
					if(color != 'R') r++;  // 새로 칠해야 하는 빨간색++
				}
				paintW[row] = w;  // row 행에서 새로 칠해야 하는 하얀색 개수
				paintB[row] = b;  // row 행에서 새로 칠해야 하는 파란색 개수
				paintR[row] = r;  // row 행에서 새로 칠해야 하는 빨간색 개수
			}
			
			// 각 행의 누적합
			// 마지막 행까지의 누적합 저장해야하므로 크기 N+1로 설정
			int[] sumW = new int[N+1];
			int[] sumB = new int[N+1];
			int[] sumR = new int[N+1];
			for(int i = 0; i < N; i++) {  // 행 하나씩 순회
				sumW[i+1] = sumW[i] + paintW[i];  // 다음 누적합 = 이전 누적합 + 지금 행 합
				sumB[i+1] = sumB[i] + paintB[i];
				sumR[i+1] = sumR[i] + paintR[i];
			}
			
			// 칠해야 하는 최소값 (결과) 초기화 => 정수 최대값으로 초기화
			int result = Integer.MAX_VALUE;
			
			// endW: 마지막 하얀색 줄 인덱스
			// endB: 마지막 파란색 줄 인덱스
			for(int endW = 0; endW <= N-3; endW++) {  // 0번 인덱스 <= 마지막 하얀색 줄 <= N-3번 인덱스
				for(int endB = endW+1; endB <= N-2; endB++) {  // 마지막 하얀색 줄+1 <= 마지막 파란색 줄 <= N-2번 인덱스
					int white = sumW[endW+1];  // 0번째줄 ~ endW번째 줄까지 하얀색으로 칠해야 하는 개수
					int blue = sumB[endB+1] - sumB[endW+1];  // endB번째 줄까지 파란색으로 칠해야 하는 개수 - endW번째 인덱스까지 파란색으로 칠해야 하는 개수
					int red = sumR[N] - sumR[endB+1];  // 마지막 인덱스까지 빨간색으로 칠해야 하는 개수 - endB번째까지 빨간색으로 칠해야 하는 개수
					
					int cnt = white+blue+red;  // 전체 깃발에서 새로 칠해야 하는 칸 개수
					if(cnt < result) result = cnt;
				}
			}
			
			System.out.println("#" + tc + " " + result);
			
		}  // 테스트케이스만큼 반복 끝
		
		
		

	}


}
